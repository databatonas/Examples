// Возведение в степень.

Console.WriteLine("Введите число, которое требуется возвести в степень.");
int a = Convert.ToInt32(Console.ReadLine());
Console.WriteLine("Введите число, определяющее степень.");
int n = Convert.ToInt32(Console.ReadLine());

// Итеративный метод.
int PowerFor(int a, int n) /* (а)- это число, (n)- это степень.*/
{
    int result = 1; /* Вводим переменную (result- результат) и присваиваем ей значение (1), потому, 
                   что ноль в любой степени равен нулю.*/
    for (int i = 1; i <= n; i++) result *= a; /* Вводим переменную (i- счётчик) и присваиваем ей 
    значение (1),потому, что любое число в первой степени- это тоже число. До тех пор, пока (i) 
    не достигнет значения (n) будем увеличивать его, при каждой итерации, на единицу и (result) 
    умножать на (а).*/
    return result; /* Возвращаем результат.*/
}

//Рекурсивный метод.
int PowerRec(int a, int n)
{
   // return n == 0 ? 1 : PowerRec(a, n - 1); // То, что написано ниже, можно записать в одну 
                                              // строку, используя тернарный оператор.*/
    if (n == 0) return 1; /* Если степень равна нулю, то возвращаем единицу. 
                            По сути- это условие выхода из цикла.*/
    else return PowerRec(a, n - 1) * a; /* Иначе будем запускать рекурсивный подсчёт, где текущее 
    значение (а) будет домножаться на вызов рекурсивной функции, где в качестве аргумента 
    передаём основание нашей степени и показатель на единицу меньше.*/
}

// Ещё один рекурсивный метод метод.
int PowerRecMath(int a, int n)
{
    if(n == 0) return 1;
    else if(n % 2 ==0) return PowerRecMath(a * a, n / 2); /* Для примера: 2  в 12 степени- это то же самое, 
    что 2 во второй степени и возведённое в шестую степень, т.е. (2 * 2) и возвели в степень (12 / 2).*/
    else return PowerRecMath(a, n - 1) * a;
}

Console.WriteLine(PowerFor(a, n));
Console.WriteLine(PowerRec(a, n));
Console.WriteLine(PowerRecMath(a, n));